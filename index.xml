<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pavlos Ratis</title>
    <link>https://dastergon.gr/</link>
    <description>Recent content on Pavlos Ratis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 03 Feb 2021 20:42:16 +0100</lastBuildDate><atom:link href="https://dastergon.gr/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Control Packetflow TCP_NODELAY</title>
      <link>https://dastergon.gr/posts/2021/02/control-packetflow-tcp_nodelay/</link>
      <pubDate>Wed, 03 Feb 2021 20:42:16 +0100</pubDate>
      
      <guid>https://dastergon.gr/posts/2021/02/control-packetflow-tcp_nodelay/</guid>
      <description>This article was originally published on GopherAcademy.com on December 19, 2019.
Writing web services requires a lot of effort and thinking to make them robust and performant. There&amp;rsquo;s a wide range of areas to look in order to improve the performance of our service. We can start by improving the code itself and if we get into the rabbit hole of optimizations, we might also begin to look at the garbage collector, the operating system, the networking level, and the hardware that hosts our services.</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>https://dastergon.gr/projects/</link>
      <pubDate>Tue, 02 Feb 2021 16:23:07 +0200</pubDate>
      
      <guid>https://dastergon.gr/projects/</guid>
      <description>awesome-sre - A curated list of Site Reliability Engineering resources. awesome-chaos-engineering - A curated list of Chaos Engineering resources. Wheel of Misfortune - Role Playing Game for Incident Management Training. kubectl-janitor - A kubectl plugin that assists in finding objects in a problematic state in your Kubernetes cluster. postmortems.app - A postmortems metadata index. Postmortem Templates - A collection of postmortem templates from various sources. Availability Calculator - Calculate how much downtime should be permitted in your Service Level Agreement or Objective.</description>
    </item>
    
    <item>
      <title>The Production Readiness Spectrum</title>
      <link>https://dastergon.gr/posts/2020/09/the-production-readiness-spectrum/</link>
      <pubDate>Wed, 02 Sep 2020 19:45:15 +0200</pubDate>
      
      <guid>https://dastergon.gr/posts/2020/09/the-production-readiness-spectrum/</guid>
      <description>How do we define the production-readiness of services? How can we know that a service is ready for prime time?
A &amp;ldquo;production-ready&amp;rdquo; service for an early-stage startup might be a service that has monitoring support, alerts, and a few unit tests. In contrast, in a large corporation, it might be a service with an adequate amount of unit and integration tests, documentation, monitoring, alerts, tracing support, and more.
Production Readiness is not something that we can prescribe.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://dastergon.gr/about/</link>
      <pubDate>Mon, 10 Aug 2020 15:44:14 +0200</pubDate>
      
      <guid>https://dastergon.gr/about/</guid>
      <description>Hi there! My name&amp;rsquo;s Pavlos and I&amp;rsquo;m a Site Reliability Engineer based in Munich, Germany. I am particularly interested in building software and expanding my knowledge around the reliability of services and their infrastructure.
I enjoy contributing to open source software. I have created a few open source SRE projects such as the awesome-sre and Wheel of Misfortune, to assist teams and individuals get on board the SRE culture. Finally, I was the technical reviewer of the &amp;ldquo;Real World SRE&amp;rdquo; book from Packt Publishing, where I offered suggestions regarding the content of the book.</description>
    </item>
    
  </channel>
</rss>
